import{_ as s,r as i,o as l,c as d,b as e,d as n,e as t,a as r}from"./app-fW6TQOQj.js";const c={},o=e("h1",{id:"nginx",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nginx"},[e("span",null,"NGINX")])],-1),p=e("h2",{id:"在既有-nginx-上增加编译-http2-模块",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#在既有-nginx-上增加编译-http2-模块"},[e("span",null,"在既有 nginx 上增加编译 http2 模块")])],-1),h={href:"https://www.cnblogs.com/surging-dandelion/p/14378073.html",target:"_blank",rel:"noopener noreferrer"},u=r(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nginx <span class="token parameter variable">-V</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制 <code>configure arguments</code>，增加 <code>--with-http_v2_module</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/nginx-1.24.0 <span class="token parameter variable">--user</span><span class="token operator">=</span>root --with-http_ssl_module --with-http_stub_status_module --with-http_v2_module
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>只 make 不 install</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>make 过后在编译目录 下 objs 中生成新的 nginx 执行文件</p><p>备份 ./sbin 下的 nginx</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> sbin/nginx sbin/nginx-without-h2.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将新编译的 nginx 执行文件拷贝到原执行文件的位置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> objs/nginx sbin/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看现有 nginx 快捷运行命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">whereis</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>备份现有 nginx 快捷运行命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> /usr/local/bin/nginx /usr/local/bin/nginx-without-h2.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>拷贝 nginx 运行命令，快捷运行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> sbin/nginx /usr/local/bin/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编辑 nginx.conf</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>listen <span class="token number">443</span> ssl http2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启 nginx</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nginx <span class="token parameter variable">-t</span>
<span class="token comment"># 必须 stop、不能 reload</span>
nginx <span class="token parameter variable">-s</span> stop
nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="强制协商缓存-index-html" tabindex="-1"><a class="header-anchor" href="#强制协商缓存-index-html"><span>强制协商缓存 index.html</span></a></h2><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code>location / {
    root D:/Softs/nginx-1.23.4/html/dist;
    try_files $uri $uri/ /index.html;
    index  index.html;

    # ++++++++
    if ($request_filename ~* .*index\\.(html)$){
        add_header Cache-Control &quot;no-cache&quot;;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="root-与-alias-的区别" tabindex="-1"><a class="header-anchor" href="#root-与-alias-的区别"><span>root 与 alias 的区别</span></a></h2><h2 id="proxy-pass-后有无-的区别" tabindex="-1"><a class="header-anchor" href="#proxy-pass-后有无-的区别"><span>proxy_pass 后有无 <code>/</code> 的区别</span></a></h2><h2 id="开启同源策略" tabindex="-1"><a class="header-anchor" href="#开启同源策略"><span>开启同源策略</span></a></h2>`,25);function v(m,g){const a=i("ExternalLinkIcon");return l(),d("div",null,[o,p,e("p",null,[n("参考自："),e("a",h,[n("既有 Nginx 不停服重新动态编译增加 http2.0 模块"),t(a)])]),u])}const x=s(c,[["render",v],["__file","index.html.vue"]]),_=JSON.parse('{"path":"/nginx/","title":"NGINX","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"在既有 nginx 上增加编译 http2 模块","slug":"在既有-nginx-上增加编译-http2-模块","link":"#在既有-nginx-上增加编译-http2-模块","children":[]},{"level":2,"title":"强制协商缓存 index.html","slug":"强制协商缓存-index-html","link":"#强制协商缓存-index-html","children":[]},{"level":2,"title":"root 与 alias 的区别","slug":"root-与-alias-的区别","link":"#root-与-alias-的区别","children":[]},{"level":2,"title":"proxy_pass 后有无 / 的区别","slug":"proxy-pass-后有无-的区别","link":"#proxy-pass-后有无-的区别","children":[]},{"level":2,"title":"开启同源策略","slug":"开启同源策略","link":"#开启同源策略","children":[]}],"git":{"updatedTime":1707447522000},"filePathRelative":"nginx/README.md"}');export{x as comp,_ as data};
