import{_ as i,r as o,o as l,c as r,b as n,d as s,e as a,w as c,a as e}from"./app-5ae25ba9.js";const d="/docs/assets/2023-09-11_143646-7f434e71.jpg",u="/docs/assets/2023-09-11_145916-4b55984d.jpg",k="/docs/assets/2023-09-11_150205-5fca693b.jpg",v="/docs/assets/2023-09-11_152652-e7cdd4cd.jpg",m="/docs/assets/2023-09-11_162750-65674d84.jpg",h="/docs/assets/2023-09-11_190923-5e7a9d53.jpg",b="/docs/assets/2023-09-11_191300-21828a15.jpg",_="/docs/assets/2023-09-11_191530-5c61f0fa.jpg",g="/docs/assets/2023-10-23_090122-49d53e1c.jpg",y="/docs/assets/2023-10-23_090319-2d6485fd.jpg",f="/docs/assets/2023-10-23_094614-640191df.jpg",E={},S=n("h1",{id:"sentry-监控平台",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sentry-监控平台","aria-hidden":"true"},"#"),s(" Sentry 监控平台")],-1),x=n("p",null,"搭建自托管私服，不使用 Sentry 开放于互联网的 SaaS 服务",-1),R=n("h2",{id:"下载-安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载-安装","aria-hidden":"true"},"#"),s(" 下载 & 安装")],-1),w={href:"https://develop.sentry.dev/self-hosted/",target:"_blank",rel:"noopener noreferrer"},q=e('<h3 id="_1-准备服务器" tabindex="-1"><a class="header-anchor" href="#_1-准备服务器" aria-hidden="true">#</a> 1. 准备服务器</h3><p>镜像：<code>CentOS-7-x86_64-DVD-2009.iso</code></p><p>硬件配置要求：</p><ul><li>CPU：<code>4 核</code> 及以上</li><li>运存：<code>3800 MB</code> 及以上</li><li>磁盘：<code>20 GB</code> 及以上</li></ul><p>不满足硬件要求将无法通过 sentry 的校验，无法进行安装</p><h3 id="_2-安装-docker-和-docker-compose" tabindex="-1"><a class="header-anchor" href="#_2-安装-docker-和-docker-compose" aria-hidden="true">#</a> 2. 安装 docker 和 docker-compose</h3>',6),D={href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"},A=e(`<ol><li><p>移除旧版 docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
               docker-client <span class="token punctuation">\\</span>
               docker-client-latest <span class="token punctuation">\\</span>
               docker-common <span class="token punctuation">\\</span>
               docker-latest <span class="token punctuation">\\</span>
               docker-latest-logrotate <span class="token punctuation">\\</span>
               docker-logrotate <span class="token punctuation">\\</span>
               docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装 yum 并设置 yum&amp;docker 源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
<span class="token function">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装 docker 和 docker-compose</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启动 docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="_3-下载-sentry" tabindex="-1"><a class="header-anchor" href="#_3-下载-sentry" aria-hidden="true">#</a> 3. 下载 sentry</h3>`,2),T={href:"https://github.com/getsentry/self-hosted/releases",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/getsentry/self-hosted/releases/tag/23.8.0",target:"_blank",rel:"noopener noreferrer"},j=e(`<p>下载后得到 <code>self-hosted-23.8.0.tar.gz</code></p><h3 id="_4-安装-sentry" tabindex="-1"><a class="header-anchor" href="#_4-安装-sentry" aria-hidden="true">#</a> 4. 安装 sentry</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将压缩包移动到 /usr/local 后再执行 tar 命令</span>
<span class="token builtin class-name">cd</span> /usr/local
<span class="token comment"># 解压完成后得到 self-hosted-23.8.0 目录</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> self-hosted-23.8.0.tar.gz
<span class="token comment"># 重命名目录，方便查找与进入</span>
<span class="token function">mv</span> self-hosted-23.8.0 setnry
<span class="token builtin class-name">cd</span> setnry
./install.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不是非得放在 <code>/usr/local</code>，非系统关键位置都可以</p><p>该步：<code>▶ Fetching and updating Docker images ...</code>会卡住较长时间，解决方法：</p>`,5),P=n("li",null,[n("p",null,[s("等待 20~30 十分钟后若仍然不动直接按下"),n("code",null,"Ctrl + C"),s("结束进程即可，结束后再次执行"),n("code",null,"./install.sh"),s("，多等待几次，多结束几次，安装就能进行到下一步；或者参考 2\\3")])],-1),I=n("li",null,[n("p",null,[s("加速 github ("),n("code",null,"23.8.0: Pulling from getsentry/sentry"),s(")、魔法上网")])],-1),C=e(`<h3 id="_5-创建首个账号" tabindex="-1"><a class="header-anchor" href="#_5-创建首个账号" aria-hidden="true">#</a> 5. 创建首个账号</h3><p><code>Would you like to create a user account now? [Y/n]: Y</code></p><p>输入邮箱（账号）、密码即完成安装</p><h2 id="启-停-sentry" tabindex="-1"><a class="header-anchor" href="#启-停-sentry" aria-hidden="true">#</a> 启/停 sentry</h2><p>docker 未启动时应当先启动 docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动 sentry 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/sentry
<span class="token function">docker</span> compose up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>停止 sentry 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/sentry
<span class="token function">docker</span> compose down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="首次访问-sentry" tabindex="-1"><a class="header-anchor" href="#首次访问-sentry" aria-hidden="true">#</a> 首次访问 sentry</h2><p>浏览器访问 <code>http://\${服务器IP}:9000</code>，输入安装时创建的账号密码进行登录</p><p>登陆后将跳转到一个初始配置页面，可以不做任何配置改动，直接点击底部 <code>continue</code> 按钮。</p><p>点击左上角<code>Sentry</code>文字，再点击下拉菜单中的<code>User settings</code>：</p>`,14),B=n("li",null,[s("将 "),n("code",null,"Language"),s("设置为"),n("code",null,"Simplified Chinese")],-1),V=n("code",null,"Timezone",-1),O=n("code",null,"Shanghai",-1),M={href:"https://github.com/getsentry/self-hosted/issues/2405",target:"_blank",rel:"noopener noreferrer"},L=n("li",null,"刷新浏览器后界面就变成了中文",-1),Y=e('<p><img src="'+d+'" alt="调整界面语言与时区"></p><h2 id="使用-sentry" tabindex="-1"><a class="header-anchor" href="#使用-sentry" aria-hidden="true">#</a> 使用 sentry</h2><h3 id="_1-在-sentry-创建项目" tabindex="-1"><a class="header-anchor" href="#_1-在-sentry-创建项目" aria-hidden="true">#</a> 1. 在 sentry 创建项目</h3><p>点击左侧菜单项<code>项目</code>，再点击右上角<code>创建项目</code></p><p><img src="'+u+'" alt="创建项目"></p><p>平台选择<code>VUE</code>，在页面底部<code>项目名称</code>处填入项目名称，最后点击<code>创建项目</code></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>项目名称依据自己的真实项目随意填写，这里只是以<code>zhuandai_frontend</code>为例</p></div><p><img src="'+k+'" alt="创建项目"></p><h3 id="_2-vue-前端项目集成-sentry-sdk" tabindex="-1"><a class="header-anchor" href="#_2-vue-前端项目集成-sentry-sdk" aria-hidden="true">#</a> 2. Vue 前端项目集成 sentry SDK</h3>',9),U={href:"https://docs.sentry.io/platforms/javascript/guides/vue/",target:"_blank",rel:"noopener noreferrer"},F=e(`<p>以下为简单集成方式，后续需要添加 <code>version</code> 以及 <code>environment</code></p><h4 id="_1-安装-sdk" tabindex="-1"><a class="header-anchor" href="#_1-安装-sdk" aria-hidden="true">#</a> 1. 安装 SDK</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i @sentry/vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-获取-dsn-客户端密钥" tabindex="-1"><a class="header-anchor" href="#_2-获取-dsn-客户端密钥" aria-hidden="true">#</a> 2. 获取 DSN 客户端密钥</h4><p>DSN 是一个字符串，包含了明文密钥和 sentry 服务的 IP、端口号等信息。在前端初始化 SDK 时传入 DSN，SDK 通过解析这个 DSN 字符串获得上报的权限以及知道向哪里上报事件。</p><p>点击左侧菜单项<code>项目</code>，再点击该项目的齿轮图标</p><p><img src="`+v+'" alt="获取 DSN"></p><p>点击左侧<code>客户端密钥 (DSN)</code>，再双击右侧 <code>DSN</code> 输入框内的文字进行全选，全选后进行复制</p><p><img src="'+m+`" alt="获取 DSN"></p><h4 id="_3-引入-初始化-sdk" tabindex="-1"><a class="header-anchor" href="#_3-引入-初始化-sdk" aria-hidden="true">#</a> 3. 引入 &amp; 初始化 SDK</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> init<span class="token punctuation">,</span> BrowserTracing<span class="token punctuation">,</span> vueRouterInstrumentation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@sentry/vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">setupSentry</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    app<span class="token punctuation">,</span>
    <span class="token comment">// 填入 DSN</span>
    <span class="token literal-property property">dsn</span><span class="token operator">:</span> <span class="token string">&quot;填入复制的 DSN&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">BrowserTracing</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">routingInstrumentation</span><span class="token operator">:</span> <span class="token function">vueRouterInstrumentation</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token comment">/* App.vue */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token comment">/* { options } */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 必须先初始化 sentry 再 mount，否则 mount 期间报错了 sentry 捕获不到也就无法上报</span>
<span class="token function">setupSentry</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> router<span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">提示</p><p>SDK 不会在开发模式下上报异常，构建后才能看到上报的请求</p></div><h3 id="_3-上传-sourcemap" tabindex="-1"><a class="header-anchor" href="#_3-上传-sourcemap" aria-hidden="true">#</a> 3. 上传 sourcemap</h3><h4 id="_1-安装上传插件" tabindex="-1"><a class="header-anchor" href="#_1-安装上传插件" aria-hidden="true">#</a> 1. 安装上传插件</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i @sentry/vite-plugin <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-获取-authtoken" tabindex="-1"><a class="header-anchor" href="#_2-获取-authtoken" aria-hidden="true">#</a> 2. 获取 authToken</h4><p>点击左上角，选择<code>User auth tokens</code>，再点击<code>创建新的令牌</code></p><p><img src="`+h+'" alt="获取 authToken"></p><p>作用域使用默认即可，最后点击<code>创建令牌</code></p><p><img src="'+b+'" alt="获取 authToken"></p><p>双击右侧 <code>认证令牌</code> 输入框内的文字进行全选，全选后进行复制</p><p><img src="'+_+`" alt="获取 authToken"></p><h4 id="_3-引入-初始化上传插件" tabindex="-1"><a class="header-anchor" href="#_3-引入-初始化上传插件" aria-hidden="true">#</a> 3. 引入 &amp; 初始化上传插件</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vite.config.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> sentryVitePlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@sentry/vite-plugin&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 省略其他配置</span>
  <span class="token operator">...</span><span class="token punctuation">,</span>
  <span class="token comment">// sourcmap 应当设置为 true</span>
  <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// 省略其他插件</span>
    <span class="token operator">...</span><span class="token punctuation">,</span>
    <span class="token comment">// Put the Sentry vite plugin after all other plugins</span>
    <span class="token function">sentryVitePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">authToken</span><span class="token operator">:</span> <span class="token string">&quot;填入复制的 authToken&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 填入组织 ID，默认都是 sentry</span>
      <span class="token literal-property property">org</span><span class="token operator">:</span> <span class="token string">&quot;sentry&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 项目名称</span>
      <span class="token literal-property property">project</span><span class="token operator">:</span> <span class="token string">&quot;填入项目名&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// sentry 服务的 IP + PORT</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>服务器<span class="token constant">IP</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:9000</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token comment">// 关闭日志显示，想看上传日志可设置为 false</span>
      <span class="token literal-property property">slient</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">sourcemaps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// 上传完成后删除 sourcemap 文件</span>
        <span class="token comment">// 防止意外将 sourcemap 文件部署到生产环境导致源码泄露</span>
        <span class="token literal-property property">filesToDeleteAfterUpload</span><span class="token operator">:</span> <span class="token string">&quot;**/*.js.map&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>构建成功后、完成前会自动上传</p><h2 id="集成-release" tabindex="-1"><a class="header-anchor" href="#集成-release" aria-hidden="true">#</a> 集成 release</h2><p>为了能让<code>sentry</code> 正确映射错误发生的文件与行数，上报时的 <code>release</code> 和上传 <code>sourcemap</code> 时的 <code>release</code> 应当保持相同</p><p>当没有手动设置 <code>release</code> 时，sentry 会自己生成 <code>release</code>，因此在 <code>init</code> 时和上传时要么都设置并且设置成相同的，要么就都不要设置</p><p>集成 <code>release</code> 需要配置两个地方： <code>sentryVitePlugin</code> 和 <code>Sentry.init</code></p>`,29),$=n("code",null,"__RELEASE_4_SENTRY__",-1),z=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx cross-env <span class="token assign-left variable">__RELEASE_4_SENTRY__</span><span class="token operator">=</span><span class="token variable">\${releaseNo}</span> <span class="token assign-left variable">__IS_CREATE_SOURCE_MAP__</span><span class="token operator">=</span><span class="token number">1</span> vite build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-配置-sentryviteplugin" tabindex="-1"><a class="header-anchor" href="#_1-配置-sentryviteplugin" aria-hidden="true">#</a> 1. 配置 <code>sentryVitePlugin</code></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vite.config.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> sentryVitePlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@sentry/vite-plugin&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 读取环境变量</span>
<span class="token keyword">const</span> <span class="token constant">RELEASE_NAME</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>__RELEASE_4_SENTRY__
<span class="token keyword">const</span> <span class="token constant">IS_IS_CREATE_SOURCE_MAP</span> <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>__CREATE_SOURCE_MAP__

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 省略其他配置</span>
  <span class="token operator">...</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token constant">IS_CREATE_SOURCE_MAP</span><span class="token punctuation">,</span>
  <span class="token comment">// 定义 release 版本号全局常量，应用代码中 Sentry.init() 时使用</span>
  <span class="token literal-property property">define</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">__RELEASE_4_SENTRY__</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token constant">RELEASE_NAME</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// 省略其他插件</span>
    <span class="token operator">...</span><span class="token punctuation">,</span>
    <span class="token function">sentryVitePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 新增 release 配置项</span>
      <span class="token literal-property property">release</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// vite 插件内的 release.name 要与 Sentry.init 时的 release 保持相同</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token constant">RELEASE_NAME</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 可以配置也可以不配置，通常情况下是不生成 sourcemap 就不用上传</span>
      <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token constant">IS_CREATE_SOURCE_MAP</span>
      <span class="token comment">// 以下配置与集成 release 无关无需改动</span>
      <span class="token literal-property property">authToken</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">org</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">project</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置-sentry-init" tabindex="-1"><a class="header-anchor" href="#_2-配置-sentry-init" aria-hidden="true">#</a> 2. 配置 <code>Sentry.init</code></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> init<span class="token punctuation">,</span> BrowserTracing <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@sentry/vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">setupSentry</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 在 vite.config.js 的 define 中设置的该全局常量</span>
    <span class="token literal-property property">release</span><span class="token operator">:</span> __RELEASE_4_SENTRY__<span class="token punctuation">,</span>
    app<span class="token punctuation">,</span>
    <span class="token literal-property property">dsn</span><span class="token operator">:</span> <span class="token string">&quot;填入 DSN&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">BrowserTracing</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">routingInstrumentation</span><span class="token operator">:</span> <span class="token function">vueRouterInstrumentation</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-查看最终效果" tabindex="-1"><a class="header-anchor" href="#_3-查看最终效果" aria-hidden="true">#</a> 3. 查看最终效果</h3><p>某次构建指定版本号为<code>11</code>、生成 <code>sourcemap</code>，使用构建命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx cross-env <span class="token assign-left variable">__RELEASE_4_SENTRY__</span><span class="token operator">=</span><span class="token number">11</span> <span class="token assign-left variable">__IS_CREATE_SOURCE_MAP__</span><span class="token operator">=</span><span class="token number">1</span> vite build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看错误详情、报错文件及行数：</p><p><img src="`+g+'" alt="查看错误详情、报错文件及行数"></p><p>查看 <code>sourcemap</code> 及对应的版本号：</p><p><img src="'+y+`" alt="查看错误详情、报错文件及行数"></p><h2 id="集成-environment" tabindex="-1"><a class="header-anchor" href="#集成-environment" aria-hidden="true">#</a> 集成 environment</h2><p>环境一般分为：生产环境、测试环境、开发环境，通常来说开发环境完全没有上报的必要。</p><p>集成 <code>environment</code> 只需要配置 <code>Sentry.init</code> 即可，不需要配置 <code>sentryVitePlugin</code></p><p><code>environment</code> 的值使用 <code>i<wbr>mport.meta.env.MODE</code> 即可：</p><ol><li><p><code>vite build</code> 时 <code>i<wbr>mport.meta.env.MODE</code> 的值是 <code>&quot;production&quot;</code></p></li><li><p><code>vite build --mode \${MODE}</code> 时 <code>i<wbr>mport.meta.env.MODE</code> 的值是 <code>\${MODE}</code></p></li><li><p><code>environment</code> 值可以完全自定义，不是必须为 <code>&quot;production&quot;</code></p></li></ol><h3 id="_1-配置-sentry-init" tabindex="-1"><a class="header-anchor" href="#_1-配置-sentry-init" aria-hidden="true">#</a> 1. 配置 <code>Sentry.init</code></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> init<span class="token punctuation">,</span> BrowserTracing <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@sentry/vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">setupSentry</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 设置 \`environment\`</span>
    <span class="token literal-property property">environment</span><span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MODE</span><span class="token punctuation">,</span>
    app<span class="token punctuation">,</span>
    <span class="token literal-property property">dsn</span><span class="token operator">:</span> <span class="token string">&quot;填入 DSN&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">BrowserTracing</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">routingInstrumentation</span><span class="token operator">:</span> <span class="token function">vueRouterInstrumentation</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用以下命令构建：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vite build
<span class="token comment"># OR</span>
vite build <span class="token parameter variable">--mode</span> staging
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-查看最终效果" tabindex="-1"><a class="header-anchor" href="#_2-查看最终效果" aria-hidden="true">#</a> 2. 查看最终效果</h3><p>搜索条件处点击 <code>All Envs</code>，下拉中可根据环境变量筛选</p><p><img src="`+f+'" alt="查看最终效果"></p><h2 id="zdb-使用中的客制化" tabindex="-1"><a class="header-anchor" href="#zdb-使用中的客制化" aria-hidden="true">#</a> ZDB 使用中的客制化</h2><h3 id="_1-公网转发上报请求" tabindex="-1"><a class="header-anchor" href="#_1-公网转发上报请求" aria-hidden="true">#</a> 1. 公网转发上报请求</h3><pre><code>目的是让上报异常的请求走测试服务器而不是生产服务器，节省服务器资源\n\n要达成的效果：\n\n![ZDB 服务器](./assets/zdb服务器.jpg)\n\n如上图，ZDB 的`sentry`部署在一个内网服务器上，只能通过内部网络访问 `sentry` 服务器，外部互联网无法直接访问 sentry 服务器并发送上报请求。\n因此生产环境上报异常的请求先到达`测试服务器`上，由`测试服务器`上的`nginx`走内网转发代理到`sentry`服务器上。\n\n1.1 修改 DSN\n\n  sentry 提供的 DSN 通常为以下格式：\n\n  `https://${HASH}@${SENTRY_SERVER_IP}:${SENTRY_SERVER_PORT}/${PROJECT_ID}`\n\n  sentry 前端 sdk 依据 DSN 向 `https://${SENTRY_SERVER_IP}:${SENTRY_SERVER_PORT}` 发送请求，将 DSN 中的 `SENTRY_SERVER_IP` 和 `SENTRY_SERVER_PORT` 改为公网的 IP(域名) 和端口号，再由公网的 IP 背后的这台服务器将请求转发到 sentry 服务器即可\n\n1.2 修改公网的 IP 服务器的 nginx 配置\n\n  ```nginx.conf\n  # 将 /sentry 开头的请求转发到真实 sentry 服务上\n  location /sentry {\n      http://${SENTRY_SERVER_IP}:9000/;\n  }\n  ```\n\n1.3 其他可用方案\n\n  即：修改 `根 URL`（Root Url）。修改了之后 sentry 本身的服务也出现了一些问题所以放弃了这个方案，改为修改 DSN\n</code></pre>',27);function K(Z,H){const t=o("ExternalLinkIcon"),p=o("RouterLink");return l(),r("div",null,[S,x,R,n("p",null,[n("a",w,[s("官方自托管私服搭建教程"),a(t)])]),q,n("p",null,[n("a",D,[s("Docker 官方教程"),a(t)])]),A,n("p",null,[n("a",T,[s("所有的 release 版本下载地址"),a(t)])]),n("p",null,[s("ZDB 使用的版本是 "),n("a",N,[s("self-hosted-23.8.0"),a(t)])]),j,n("ol",null,[P,n("li",null,[n("p",null,[a(p,{to:"/jenkins/#%E6%8F%90%E5%8D%87%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%96%E9%80%9F%E5%BA%A6%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89"},{default:c(()=>[s("提升镜像拉取速度")]),_:1})])]),I]),C,n("ul",null,[B,n("li",null,[s("将 "),V,s("设置为"),O,s("（"),n("a",M,[s("修复无法更改时区的问题"),a(t)]),s(" ）")]),L]),Y,n("p",null,[n("a",U,[s("官方集成教程"),a(t)])]),F,n("p",null,[s("假设版本号是通过"),a(p,{to:"/vite-vue/#%E6%B3%A8%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"},{default:c(()=>[s("命令行注入的环境变量")]),_:1}),s("，假设注入的版本号环境变量名是 "),$,s("：")]),z])}const G=i(E,[["render",K],["__file","index.html.vue"]]);export{G as default};
