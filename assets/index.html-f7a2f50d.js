import{_ as i,r as d,o as r,c,a as e,b as n,d as o,e as s}from"./app-a672bafd.js";const t="/docs/assets/2023-10-04_120951-a55bb7a8.jpg",l="/docs/assets/2023-10-04_115834-fbd6a36d.jpg",p="/docs/assets/2023-10-04_123321-7fd2abdc.jpg",u="/docs/assets/2023-10-04_123838-1ec50bd2.jpg",h="/docs/assets/CD主要过程-db386bd2.png",m={},v=s(`<h1 id="jenkins" tabindex="-1"><a class="header-anchor" href="#jenkins" aria-hidden="true">#</a> Jenkins</h1><h2 id="提升镜像拉取速度-可选" tabindex="-1"><a class="header-anchor" href="#提升镜像拉取速度-可选" aria-hidden="true">#</a> 提升镜像拉取速度（可选）</h2><p>准备镜像配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /etc/docker
<span class="token function">vi</span> /etc/docker/daemon.json
<span class="token comment"># 将镜像 json 粘贴到 daemon.json 文件中，保存并退出后执行下面的命令</span>
systemctl daemon-reload
systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查配置是否生效（可选）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若返回的信息含有以下文字则说明设置已经生效：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> Registry Mirrors:
  https://hub-mirror.c.163.com/
  https://mirror.baidubce.com/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-docker-安装-jenkins" tabindex="-1"><a class="header-anchor" href="#使用-docker-安装-jenkins" aria-hidden="true">#</a> 使用 docker 安装 Jenkins</h2><h3 id="安装与启动" tabindex="-1"><a class="header-anchor" href="#安装与启动" aria-hidden="true">#</a> 安装与启动</h3>`,12),b={href:"https://www.jenkins.io/zh/doc/tutorials/build-a-node-js-and-react-app-with-npm/",target:"_blank",rel:"noopener noreferrer"},k=s(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token punctuation">\\</span>
  <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">--name</span> jenkins <span class="token punctuation">\\</span>
  <span class="token parameter variable">-u</span> root <span class="token punctuation">\\</span>
  <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 <span class="token punctuation">\\</span>
  <span class="token parameter variable">-v</span> /usr/local/jenkins_home:/var/jenkins_home <span class="token punctuation">\\</span>
  jenkins/jenkins:lts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行后提示：<code>Unable to find image &#39;jenkins/jenkins:lts&#39; locally</code>，等待几秒钟后会自动拉取 <code>jenkins/jenkins:lts</code></p><p>等待拉取与安装完成…</p><h3 id="初次进入-jenkins" tabindex="-1"><a class="header-anchor" href="#初次进入-jenkins" aria-hidden="true">#</a> 初次进入 Jenkins</h3><p>首次打开 Jenkins 网页时需要输入初始密码</p><h4 id="获取初始密码" tabindex="-1"><a class="header-anchor" href="#获取初始密码" aria-hidden="true">#</a> 获取初始密码</h4><p>等待<code>docker run</code>运行完成，再运行命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> logs jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出以下文本，复制 <code>\${初始密码}</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Jenkins initial setup is required. An admin user has been created and a password generated.
Please use the following password to proceed to installation:

<span class="token variable">\${初始密码}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+t+'" alt="复制初始密码"></p><h4 id="首次打开-jenkins" tabindex="-1"><a class="header-anchor" href="#首次打开-jenkins" aria-hidden="true">#</a> 首次打开 Jenkins</h4><ol><li><p>浏览器打开<code>http:${服务器 IP}:8080</code></p><p><img src="'+l+'" alt="初次进入Jenkins"></p></li><li><p>选择<code>安装推荐的插件</code></p><p>等待插件安装完成，有些插件可能会安装失败，多次重试安装后仍失败则直接跳过</p></li><li><p>创建第一个管理员用户</p><p>可以直接使用默认的 <code>admin</code> 账号登录（点击<code>使用admin账户继续</code>），也可以新建管理员用户；</p><p>为了防止他人猜到账号，这里选择新建管理员用户：填写完表单后点击右下角<code>保存并完成</code></p><p><img src="'+p+'" alt="创建第一个管理员用户"></p></li><li><p>配置实例</p><p>不需要通过域名访问时不需要更改 Jenkins URL，点击<code>保存并完成</code>即可</p><p><img src="'+u+`" alt="创建第一个管理员用户"></p></li><li><p>重启 Jenkins</p><p>即使已经安装了汉化插件有些文本仍是英文，重启后就能变成中文，手动运行命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>Jenkins 的搭建已经完成，后文是通过 Jenkins 实现 CD：</p><h2 id="cd" tabindex="-1"><a class="header-anchor" href="#cd" aria-hidden="true">#</a> CD</h2><p>CD 的主要过程：</p><p><img src="`+h+'" alt="创建第一个管理员用户"></p><h2 id="zdb-相关配置" tabindex="-1"><a class="header-anchor" href="#zdb-相关配置" aria-hidden="true">#</a> ZDB 相关配置</h2><p>账密：<code>zgadmin/pwd@jenkins</code></p><p>Dashboard - Manage Jenkins - Available plugins Publish Over SSH GitLab</p><p>Dashboard - Manage Jenkins - System Git plugin</p><p>Publish over SSH - 新增</p><p>Name zdb-prod-37 Hostname 37 Username root Remote Directory /</p><p>√ Use password authentication, or use a different key</p><p>NodeJS</p>',25);function g(_,j){const a=d("ExternalLinkIcon");return r(),c("div",null,[v,e("p",null,[n("官方教程："),e("a",b,[n("使用 npm 构建 Node.js 和 React 应用"),o(a)])]),k])}const x=i(m,[["render",g],["__file","index.html.vue"]]);export{x as default};
