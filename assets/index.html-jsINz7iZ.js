import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as d,o as t,c as o,b as n,d as e,e as i,a as s}from"./app-uZC-vkso.js";const c={},r=n("h1",{id:"nginx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nginx"},[n("span",null,"NGINX")])],-1),p=n("h2",{id:"在既有-nginx-上增加编译-http2-模块",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在既有-nginx-上增加编译-http2-模块"},[n("span",null,"在既有 nginx 上增加编译 http2 模块")])],-1),h={href:"https://www.cnblogs.com/surging-dandelion/p/14378073.html",target:"_blank",rel:"noopener noreferrer"},u=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nginx <span class="token parameter variable">-V</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制 <code>configure arguments</code>，增加 <code>--with-http_v2_module</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/nginx-1.24.0 <span class="token parameter variable">--user</span><span class="token operator">=</span>root --with-http_ssl_module --with-http_stub_status_module --with-http_v2_module
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>只 make 不 install</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>make 过后在编译目录 下 objs 中生成新的 nginx 执行文件</p><p>备份 ./sbin 下的 nginx</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> sbin/nginx sbin/nginx-without-h2.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将新编译的 nginx 执行文件拷贝到原执行文件的位置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> objs/nginx sbin/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看现有 nginx 快捷运行命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">whereis</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>备份现有 nginx 快捷运行命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> /usr/local/bin/nginx /usr/local/bin/nginx-without-h2.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>拷贝 nginx 运行命令，快捷运行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> sbin/nginx /usr/local/bin/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编辑 nginx.conf</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>listen <span class="token number">443</span> ssl http2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启 nginx</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nginx <span class="token parameter variable">-t</span>
<span class="token comment"># 必须 stop、不能 reload</span>
nginx <span class="token parameter variable">-s</span> stop
nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="强制协商缓存-index-html" tabindex="-1"><a class="header-anchor" href="#强制协商缓存-index-html"><span>强制协商缓存 index.html</span></a></h2><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code>location / {
    root D:/Softs/nginx-1.23.4/html/dist;
    try_files $uri $uri/ /index.html;
    index  index.html;

    # ++++++++
    if ($request_filename ~* .*index\\.(html)$){
        add_header Cache-Control &quot;no-cache&quot;;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="root-与-alias-的区别" tabindex="-1"><a class="header-anchor" href="#root-与-alias-的区别"><span>root 与 alias 的区别</span></a></h2><p>相关模块：<code>ngx_http_core_module</code></p><h3 id="alias-定义请求替换项" tabindex="-1"><a class="header-anchor" href="#alias-定义请求替换项"><span>alias 定义请求替换项</span></a></h3><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code>location /i/ {
    alias /data/images/;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当请求 /i/top.gif 时，返回 /data/images/top.gif</p><p>即：用 alias 后面的内容替换 location 后面的内容</p><h3 id="root-定义请求根目录" tabindex="-1"><a class="header-anchor" href="#root-定义请求根目录"><span>root 定义请求根目录</span></a></h3><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code>location /i/ {
    root /data/images;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当请求 /i/top.gif 时，返回 /data/images/i/top.gif</p><p>即：用 root 后面的内容拼接上 location 后面的内容</p><h2 id="proxy-pass-后有无-的区别" tabindex="-1"><a class="header-anchor" href="#proxy-pass-后有无-的区别"><span>proxy_pass 后有无 <code>/</code> 的区别</span></a></h2><p>相关模块：<code>ngx_http_proxy_module</code></p><h3 id="结尾有斜杠" tabindex="-1"><a class="header-anchor" href="#结尾有斜杠"><span>结尾有斜杠</span></a></h3><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code>location /name/ {
    proxy_pass http://127.0.0.1/;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/name/ 被认为是根路径，直接访问 /name/ 后面的路径即可，则 nginx 不会保留 /name/</p><p>即：使用 proxy_pass 后面的内容 替换 请求路径中开头及 location 的内容</p><p>例：请求 http://localhost/name/abc，将被代理到 http://127.0.0.1/abc</p><h3 id="结尾无斜杠" tabindex="-1"><a class="header-anchor" href="#结尾无斜杠"><span>结尾无斜杠</span></a></h3><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code>location /name/ {
    proxy_pass http://127.0.0.1;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/name/ 被认为是某个相对路径，nginx 需要保留完整路径才能正确访问</p><p>即：使用 proxy_pass 的内容 拼接 请求中 location 及之后的内容</p><p>例：请求 http://localhost/name/abc，将被代理到 http://127.0.0.1/name/abc</p><h2 id="开启同源策略" tabindex="-1"><a class="header-anchor" href="#开启同源策略"><span>开启同源策略</span></a></h2>`,45),v=n("code",null,"CORS",-1),g=n("code",null,"Origin",-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"Access-Control-Allow-xx",-1),x=n("code",null,"Origin",-1),_=s(`<p>但通过设置响应头来控制，需要配置的行数过多，有一种简单的办法：<strong>给非法源的请求返回 http 错误</strong>，比如 500 等，同样能达到限制同源的效果。</p><h3 id="_1-确定好允许的源" tabindex="-1"><a class="header-anchor" href="#_1-确定好允许的源"><span>1. 确定好允许的源</span></a></h3><p>首先能确定的是自己服务所在的源能访问自己的服务</p><p>服务部署在公网的 <code>https://host/path</code> 上，<code>https://host/path</code> 就作为一个合法的源，应当允许该源访问</p><p>如果有通过内网访问这个服务的需求，而这个服务部署在了 <code>10.20.30.40</code> 这台服务器的 <code>8080</code> 端口上，那么 <code>http://10.20.30.40:8080</code> 或者 <code>https://10.20.30.40:8080</code> 也作为一个合法的源</p><p>当请求头中 <code>Origin</code> 为上述两个 URL 时应当正常返回，否则应当返回 http 500</p><h3 id="_2-构建合法源的列表" tabindex="-1"><a class="header-anchor" href="#_2-构建合法源的列表"><span>2. 构建合法源的列表</span></a></h3><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code># 在 server 上方添加 map
map $http_origin $origin_status {
    &quot;~^https://host/path&quot; 1;
    &quot;~^https(?)://10.20.30.40:8080&quot; 1;
    # 假如还有第三方合法源也可以放在后面
    &quot;~*&quot; 0;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>$http_origin</code> 的值是 <code>https://host/path</code> 时，<code>$origin_status</code> 的值是 <code>1</code></p><p>当 <code>$http_origin</code> 的值是 <code>http://10.20.30.40:8080</code> 或者 <code>https://10.20.30.40:8080</code> 时，<code>$origin_status</code> 的值是 <code>1</code></p><p>当 <code>$http_origin</code> 的值是其他值时，<code>$origin_status</code> 的值是 <code>0</code></p><h3 id="_3-非法源返回-500" tabindex="-1"><a class="header-anchor" href="#_3-非法源返回-500"><span>3. 非法源返回 500</span></a></h3><div class="language-nginx.conf line-numbers-mode" data-ext="nginx.conf" data-title="nginx.conf"><pre class="language-nginx.conf"><code>map $http_origin $origin_status {
    &quot;~^https://host/path&quot; 1;
    &quot;~^https(?)://10.20.30.40:8080&quot; 1;
    &quot;~*&quot; 0;
}

server {
    location /api {
        if ($origin_status = 0){
            return 500;
        }
        proxy_pass http://localhost:48080/some-api;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当请求的源不是 map 中的值时，会返回 http 500 给请求方</p>`,14);function f(k,q){const a=d("ExternalLinkIcon");return t(),o("div",null,[r,p,n("p",null,[e("参考自："),n("a",h,[e("既有 Nginx 不停服重新动态编译增加 http2.0 模块"),i(a)])]),u,n("p",null,[e("常规、标准的 "),v,e(" 控制是通过预检请求时请求头中 "),g,e(" 与响应头中的 "),n("a",m,[b,i(a)]),e(" 配合实现的，即通过 nginx 判断 "),x,e(" 然后给响应设置对应的响应头即可。")]),_])}const y=l(c,[["render",f],["__file","index.html.vue"]]),N=JSON.parse('{"path":"/nginx/","title":"NGINX","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"在既有 nginx 上增加编译 http2 模块","slug":"在既有-nginx-上增加编译-http2-模块","link":"#在既有-nginx-上增加编译-http2-模块","children":[]},{"level":2,"title":"强制协商缓存 index.html","slug":"强制协商缓存-index-html","link":"#强制协商缓存-index-html","children":[]},{"level":2,"title":"root 与 alias 的区别","slug":"root-与-alias-的区别","link":"#root-与-alias-的区别","children":[{"level":3,"title":"alias 定义请求替换项","slug":"alias-定义请求替换项","link":"#alias-定义请求替换项","children":[]},{"level":3,"title":"root 定义请求根目录","slug":"root-定义请求根目录","link":"#root-定义请求根目录","children":[]}]},{"level":2,"title":"proxy_pass 后有无 / 的区别","slug":"proxy-pass-后有无-的区别","link":"#proxy-pass-后有无-的区别","children":[{"level":3,"title":"结尾有斜杠","slug":"结尾有斜杠","link":"#结尾有斜杠","children":[]},{"level":3,"title":"结尾无斜杠","slug":"结尾无斜杠","link":"#结尾无斜杠","children":[]}]},{"level":2,"title":"开启同源策略","slug":"开启同源策略","link":"#开启同源策略","children":[{"level":3,"title":"1. 确定好允许的源","slug":"_1-确定好允许的源","link":"#_1-确定好允许的源","children":[]},{"level":3,"title":"2. 构建合法源的列表","slug":"_2-构建合法源的列表","link":"#_2-构建合法源的列表","children":[]},{"level":3,"title":"3. 非法源返回 500","slug":"_3-非法源返回-500","link":"#_3-非法源返回-500","children":[]}]}],"git":{"createdTime":1707466523000,"updatedTime":1707466523000,"contributors":[{"name":"马振轩","email":"mzx23333@163.com","commits":1}]},"readingTime":{"minutes":2.92,"words":877},"filePathRelative":"nginx/README.md","localizedDate":"2024年2月9日"}');export{y as comp,N as data};
